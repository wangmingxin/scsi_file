CC = gcc
LD = gcc
AR = ar
EXECS = fc_open fc_copy fc_copyto fc_truncate 
LARGE_FILE_FLAGS = -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES
DEBUG_FLAGS = -DDEBUG

CCBITS32	= -maix32
CCBITS64	= -maix64
LDBITS32	= -b32
LDBITS64	= -b64

CFLAGS = -fPIC -g -O2 -W -Wall -iquote ../include -D_REENTRANT $(LARGE_FILE_FLAGS) $(DEBUG_FLAGS)
LDFLAGS = -L . -lscsifile
MYLIB = libscsifile.a
MYLIB64 = libscsifile64.a
MYDYNALIB = libscsifile.so
MYDYNALIB64 = libscsifile64.so
LIBOBJS = ody_scsi_file.o ody_scsi_ptcmd.aix.o
LIBOBJS64 = ody_scsi_file64.o ody_scsi_ptcmd.aix64.o
all: $(EXECS) $(MYLIB) $(MYLIB64) $(MYDYNALIB) $(MYDYNALIB64)
clean:
	/bin/rm -f *.o $(EXECS)  core
$(MYDYNALIB): $(LIBOBJS)
	$(LD) -shared -fPIC -o $@ $(LIBOBJS)
$(MYDYNALIB): $(LIBOBJS64)
	$(LD) -shared -fPIC -o $@ $(LIBOBJS64)
$(MYLIB): $(LIBOBJS)
	rm -rf $@
	$(AR) -X32_64 -rv $@ $(LIBOBJS)
ody_scsi_file64.o: ody_scsi_file.c
	$(CC) -o $@ $(CFLAGS) $(CCBITS64) -c $<
ody_scsi_ptcmd.aix64.o: ody_scsi_ptcmd.aix.c
	$(CC) -o $@ $(CFLAGS) $(CCBITS64) -c $<
$(MYLIB64): $(LIBOBJS64)
	rm -rf $@
	$(AR) -X64 -rv $@ $(LIBOBJS64)
fc_open: fc_open_test.o $(MYLIB)
	$(LD) -o $@ $(LDFLAGS) $^
fc_copy: fc_copy_from.o $(MYLIB)
	$(LD) -o $@ $(LDFLAGS) $^
fc_copyto: fc_copy_to.o $(MYLIB)
	$(LD) -o $@ $(LDFLAGS) $^
fc_truncate: fc_truncate.o $(MYLIB)
	$(LD) -o $@ $(LDFLAGS) $^
.c.o:
	$(CC) $(CFLAGS) -c $<
